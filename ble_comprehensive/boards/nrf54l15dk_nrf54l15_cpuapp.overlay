/* overlay file for app core */

/ {
	chosen {
		nordic,pm-ext-flash = &mx25r64;
	};
	aliases {
		myi2c = &i2c22;
		myspi = &spi21;
		myuart = &uart30;  
	};	
	/* See &GPIO0 definition below */
	zephyr,user {
		io-channels = <&adc 0>, <&adc 1>;
		extint-gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;
	};		
};

&uicr {
	nfct-pins-as-gpios;
};

&pinctrl {

	uart20_default: uart20_default {		
		group1 {
			psels = < 0x24 >;
		};
		group2 {
			psels = < 0x1000025 >;
			bias-pull-up;
		};
	};
	uart20_sleep: uart20_sleep {		
		group1 {
			psels = < 0x24 >, < 0x1000025 >;
			low-power-enable;
		};
	};
	uart30_default: uart30_default {		
		group1 {
			psels = < 0x0 >;
		};
		group2 {
			psels = < 0x1000001 >;
			bias-pull-up;
		};
	};
	uart30_sleep: uart30_sleep {		
		group1 {
			psels = < 0x0 >, < 0x1000001 >;
			low-power-enable;
		};
	};
	
	i2c22_default: i2c22_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 1, 11)>,
				<NRF_PSEL(TWIM_SCL, 1, 12)>;
			bias-pull-up;
			nordic,drive-mode = <NRF_DRIVE_S0D1>;				
		};
	};

	i2c22_sleep: i2c22_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 1, 11)>,
				<NRF_PSEL(TWIM_SCL, 1, 12)>;
			low-power-enable;
		};
	};	

	spi21_default: spi21_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 2, 6)>,
				<NRF_PSEL(SPIM_MOSI, 1, 6)>,
				<NRF_PSEL(SPIM_MISO, 1, 7)>;
		};
	};

	spi21_sleep: spi21_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 2, 6)>,
				<NRF_PSEL(SPIM_MOSI, 1, 6)>,
				<NRF_PSEL(SPIM_MISO, 1, 7)>;
			low-power-enable;
		};
	};
};


&uart30 {
	status = "okay";
	current-speed = < 1000000 >;
	/delete-property/ rts-pin;
	/delete-property/ cts-pin;
	/delete-property/ hw-flow-control;
};

&uart20 {
	status = "okay";
	/delete-property/ rts-pin;
	/delete-property/ cts-pin;
	/delete-property/ hw-flow-control;
};

&spi21 {
	status = "okay"; 
	compatible = "nordic,nrf-spim";
	pinctrl-0 = <&spi21_default>;
	pinctrl-1 = <&spi21_sleep>;
	pinctrl-names = "default", "sleep";	
    cs-gpios = <&gpio2 10 GPIO_ACTIVE_LOW>, <&gpio2 8 GPIO_ACTIVE_LOW>;
	spi_dev_0: spi_dev_0@0 {
		compatible = "spi-user-define";
		reg = <0>;
		spi-max-frequency = <DT_FREQ_M(4)>;
	}; 
	spi_dev_1: spi_dev_1@1 {
		compatible = "spi-user-define";
		reg = <1>;
		spi-max-frequency = <DT_FREQ_M(8)>;
	};    			   	
};

&i2c22 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = < &i2c22_default >;
	pinctrl-1 = < &i2c22_sleep >;
	pinctrl-names = "default", "sleep";
	i2c_dev_0: i2c_dev_0@50 {
		compatible = "i2c-user-define";
		reg = <0x50>;
	};
	i2c_dev_1: i2c_dev_1@b {
		compatible = "i2c-user-define";
		reg = <0x0B>;
	}; 		
};

&adc {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_2_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 20)>;
		zephyr,input-positive = <NRF_SAADC_AIN7>;
		zephyr,vref-mv = <900>;
		zephyr,resolution = <10>;					
	};
	
	channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_2_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 20)>;
		zephyr,input-positive = <NRF_SAADC_VDD>;
		zephyr,vref-mv = <900>;
		zephyr,resolution = <10>;				
	};

};

&gpio0 {
	/* p0.4 sense for edge */
	sense-edge-mask = <0x0010>;
};

// restore full RRAM and SRAM space - by default some parts are dedicated to FLRP
&cpuapp_rram {
	reg = <0x0 DT_SIZE_K(1524)>;
};

&cpuapp_sram {
	reg = <0x20000000 DT_SIZE_K(256)>;
	ranges = <0x0 0x20000000  0x40000>;
};

&mx25r64 {
	status = "okay";
};

/* delete sw3 to reserve the related pin for GPIO use */
/ {
	aliases {  
	 /delete-property/ sw3;
	 /delete-property/ led3;
	};
  };

/delete-node/ &button3;
/delete-node/ &led3;